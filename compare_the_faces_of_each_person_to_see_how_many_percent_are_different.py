# -*- coding: utf-8 -*-
"""Compare the faces of each person to see how many percent are different.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Iau3UcbFFUqQ3pZyH_88d_99Sb1ZHyQY

# Compare the faces of each person to see how many percent are different

### To compare the faces of two people and determine the percentage difference between them using Python, you can use a library called OpenCV. OpenCV (Open Source Computer Vision) is a library of programming functions mainly aimed at real-time computer vision.

1.First, you will need to install OpenCV. You can do this by running the following command:
"""

!pip install opencv-python

"""2.Next, you will need to load the images of the two people's faces that you want to compare. You can do this using the cv2.imread() function, which takes the file path of the image as an argument and returns the image as a NumPy array.

"""

import cv2

# Load the first image
image1 = cv2.imread("Putin_1.jpg")

# Load the second image
image2 = cv2.imread("Putin_2.jpg")

"""3.Now, you will need to convert the images to grayscale using the cv2.cvtColor() function. This is because OpenCV's face detection algorithms are optimized for grayscale images."""

# Convert the images to grayscale
gray1 = cv2.cvtColor(image1, cv2.COLOR_BGR2GRAY)
gray2 = cv2.cvtColor(image2, cv2.COLOR_BGR2GRAY)

"""4.Next, you will need to detect the faces in the images using the cv2.CascadeClassifier() function. This function takes a cascade classifier object as an argument, which is a trained model that is used to detect objects in images. You can use one of the pre-trained cascade classifiers that come with OpenCV, or you can train your own using a large dataset of images."""

# Load the cascade classifier
face_cascade = cv2.CascadeClassifier("haarcascade_frontalface_default.xml")

# Detect the faces in the images
faces1 = face_cascade.detectMultiScale(gray1, 1.3, 5)
faces2 = face_cascade.detectMultiScale(gray2, 1.3, 5)

"""5.Once the faces have been detected, you can use the cv2.matchTemplate() function to compare the two images and determine the percentage difference between them. This function takes the two images and a template matching method as arguments, and returns a floating point value that represents the degree of similarity between the two images."""

# Compare the images using template matching
result = cv2.matchTemplate(gray1, gray2, cv2.TM_CCOEFF_NORMED)

# Calculate the percentage difference between the images
percent_difference = 100 - (result[0][0] * 100)

print("The percentage difference between the two images is:", percent_difference)

"""***if error message OpenCV(4.6.0) /io/opencv/modules/imgproc/src/templmatch.cpp:1175: error: (-215:Assertion failed) _img.size().height <= _templ.size().height && _img.size().width <= _templ.size().width in function 'matchTemplate' indicates that the cv2.matchTemplate() function has encountered an assertion error.

This error is usually caused by passing the wrong type of image or template to the cv2.matchTemplate() function. The cv2.matchTemplate() function expects the first argument to be the image (gray1 in this case) and the second argument to be the template (gray2 in this case). However, if the sizes of the two images are not the same, or if one of the images is not a grayscale image, the function will raise an assertion error.

To fix this error, you can check the sizes of the two images and make sure they are the same, and you can also make sure that both images are grayscale. Here is an example of how you can do this:
"""

# Check the sizes of the images
if gray1.shape != gray2.shape:
    print("The sizes of the images are not the same")

# Make sure both images are grayscale
if len(gray1.shape) != 2:
    print("The first image is not grayscale")
if len(gray2.shape) != 2:
    print("The second image is not grayscale")

"""Once you have checked the sizes and types of the images, you can try running the cv2.matchTemplate() function again. This should fix the assertion error and allow you to compare the two images as intended."""